// <auto-generated />
using System;
using Mensagens.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mensagens.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230921232213_nomeMigration")]
    partial class nomeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Mensagens.Modules.V1.Mensagens.Models.Acao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Conteudo")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoAcao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Acao");
                });

            modelBuilder.Entity("Mensagens.Modules.V1.Mensagens.Models.Mensagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("IdAcoes")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdMensagemPadrao")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSessaoChat")
                        .HasColumnType("bigint");

                    b.Property<int>("IdUsuarioEnvio")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioRecebido")
                        .HasColumnType("int");

                    b.Property<long?>("SessaoIdSessaoChat")
                        .HasColumnType("bigint");

                    b.Property<int>("StatusMensagem")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasMaxLength(800)
                        .HasColumnType("varchar(800)");

                    b.Property<long?>("UsuarioAberturaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioRecebidoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdAcoes");

                    b.HasIndex("IdMensagemPadrao");

                    b.HasIndex("SessaoIdSessaoChat");

                    b.HasIndex("UsuarioAberturaId");

                    b.HasIndex("UsuarioRecebidoId");

                    b.ToTable("Mensagem");
                });

            modelBuilder.Entity("Mensagens.Modules.V1.Mensagens.Models.MensagemPadrao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("IndiceAnterior")
                        .HasColumnType("int");

                    b.Property<int>("IndiceArvore")
                        .HasColumnType("int");

                    b.Property<int>("ProximoIndice")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MensagemPadrao");
                });

            modelBuilder.Entity("Mensagens.Modules.V1.Mensagens.Models.SessaoChat", b =>
                {
                    b.Property<long>("IdSessaoChat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Abertura")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuarioAbertura")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioRecebido")
                        .HasColumnType("int");

                    b.Property<int>("StatusSessao")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtividade")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("UsuarioAberturaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioRecebidoId")
                        .HasColumnType("bigint");

                    b.HasKey("IdSessaoChat");

                    b.HasIndex("UsuarioAberturaId");

                    b.HasIndex("UsuarioRecebidoId");

                    b.ToTable("SessaoChat");
                });

            modelBuilder.Entity("Mensagens.Modules.V1.Mensagens.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Mensagens.Modules.V1.Mensagens.Models.Mensagem", b =>
                {
                    b.HasOne("Mensagens.Modules.V1.Mensagens.Models.Acao", "Acoes")
                        .WithMany()
                        .HasForeignKey("IdAcoes");

                    b.HasOne("Mensagens.Modules.V1.Mensagens.Models.MensagemPadrao", "MensagemPadrao")
                        .WithMany()
                        .HasForeignKey("IdMensagemPadrao");

                    b.HasOne("Mensagens.Modules.V1.Mensagens.Models.SessaoChat", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoIdSessaoChat");

                    b.HasOne("Mensagens.Modules.V1.Mensagens.Models.Usuario", "UsuarioAbertura")
                        .WithMany()
                        .HasForeignKey("UsuarioAberturaId");

                    b.HasOne("Mensagens.Modules.V1.Mensagens.Models.Usuario", "UsuarioRecebido")
                        .WithMany()
                        .HasForeignKey("UsuarioRecebidoId");

                    b.Navigation("Acoes");

                    b.Navigation("MensagemPadrao");

                    b.Navigation("Sessao");

                    b.Navigation("UsuarioAbertura");

                    b.Navigation("UsuarioRecebido");
                });

            modelBuilder.Entity("Mensagens.Modules.V1.Mensagens.Models.SessaoChat", b =>
                {
                    b.HasOne("Mensagens.Modules.V1.Mensagens.Models.Usuario", "UsuarioAbertura")
                        .WithMany()
                        .HasForeignKey("UsuarioAberturaId");

                    b.HasOne("Mensagens.Modules.V1.Mensagens.Models.Usuario", "UsuarioRecebido")
                        .WithMany()
                        .HasForeignKey("UsuarioRecebidoId");

                    b.Navigation("UsuarioAbertura");

                    b.Navigation("UsuarioRecebido");
                });
#pragma warning restore 612, 618
        }
    }
}
